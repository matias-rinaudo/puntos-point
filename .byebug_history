c
#let[:product]
#let(:product)
#let
subject
object
product
c
Product.all
let(:product_2)
product_2
let(:product_2) { create(:product, name: 'Campera', description: 'campera roja de cuero', price: 12000) }
Product.all
let(:product) { build :product }
Product.all
c
@buys.group("DATE_TRUNC('hour', created_at)").count.transform_keys {|d| d.strftime('%m/%d/%y %T') }
params[:granularity]
c
@buys
@buys@buys
c
params[:date_from]
params[:date_from].to_datetime
Buy.where(created_at: params[:date_from].to_date..params[:date_to].to_date)
params[:date_from].to_datetime
DateTime.now
DateTime.now - 1
Buy.all.map(&:created_at)
Buy.where(created_at: params[:date_from].to_datetime..params[:date_to].to_datetime)
 params[:date_to].to_datetime
params[:date_from].to_datetime
params[:date_from]
@buys = Buy.by_range_date(params[:date_from], params[:date_to])
c
DateTime.now
params[:date_to].to_datetime
params[:date_to]
params[:date_from]
Buy.by_range_date(params[:date_from], params[:date_to])
c
params[:date_from].to_datetime
params[:date_from]
params
c
params
c
category.products
category
c
category.products
category
c
Category.all
c
args
c
Category.all
args
c
Category
Category.all
args
c
args
c
args[:categories]
args
c
params
@categories.map
@categories
c
subject.get_products
subject
subjecyt
c
Rails.cache.fetch("#{cache_key_with_version}/most_purchased_products_by_category", expires_in: 12.hours) do @products = Buys::GetMorePurchasedProducts.new(categories: Category.all).get_products end
c
Rails.cache.fetch('most_purchased_products_by_categor', expires_in: 12.hours) do @products = Buys::GetMorePurchasedProducts.new(categories: Category.all).get_products end
